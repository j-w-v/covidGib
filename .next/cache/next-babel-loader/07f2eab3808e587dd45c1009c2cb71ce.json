{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport dynamic from \"next/dynamic\";\nimport { Map, TileLayer, Marker, Popup, MapControl, withLeaflet } from \"react-leaflet\";\nvar mapStyle = {\n  margin: 20,\n  padding: 20,\n  border: \"1px solid #DDD\"\n};\nvar state = {\n  center: {\n    lat: 31.698956,\n    lng: 76.732407\n  },\n  marker: {\n    lat: 31.698956,\n    lng: 76.732407\n  },\n  zoom: 13,\n  draggable: true\n};\n\nfunction RenderCompleted() {\n  var _useState = useState(false),\n      mounted = _useState[0],\n      setMounted = _useState[1];\n\n  useEffect(function () {\n    setMounted(true);\n    return function () {\n      setMounted(false);\n    };\n  });\n  return mounted;\n}\n\nvar GibMap = function GibMap(props) {\n  var isMounted = RenderCompleted();\n  return {\n    isMounted: isMounted\n  };\n};\n\nexport default GibMap;","map":{"version":3,"sources":["C:/Users/joseph.victory/Desktop/node/covidGib/components/GibMap.js"],"names":["React","useEffect","useState","dynamic","Map","TileLayer","Marker","Popup","MapControl","withLeaflet","mapStyle","margin","padding","border","state","center","lat","lng","marker","zoom","draggable","RenderCompleted","mounted","setMounted","GibMap","props","isMounted"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SACEC,GADF,EAEEC,SAFF,EAGEC,MAHF,EAIEC,KAJF,EAKEC,UALF,EAMEC,WANF,QAOO,eAPP;AASA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAE,EADO;AAEfC,EAAAA,OAAO,EAAE,EAFM;AAGfC,EAAAA,MAAM,EAAE;AAHO,CAAjB;AAMA,IAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAE;AACNC,IAAAA,GAAG,EAAE,SADC;AAENC,IAAAA,GAAG,EAAE;AAFC,GADI;AAKZC,EAAAA,MAAM,EAAE;AACNF,IAAAA,GAAG,EAAE,SADC;AAENC,IAAAA,GAAG,EAAE;AAFC,GALI;AASZE,EAAAA,IAAI,EAAE,EATM;AAUZC,EAAAA,SAAS,EAAE;AAVC,CAAd;;AAaA,SAASC,eAAT,GAA2B;AAAA,kBACKnB,QAAQ,CAAC,KAAD,CADb;AAAA,MAClBoB,OADkB;AAAA,MACTC,UADS;;AAGzBtB,EAAAA,SAAS,CAAC,YAAM;AACdsB,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,WAAO,YAAM;AACXA,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFD;AAGD,GANQ,CAAT;AAQA,SAAOD,OAAP;AACD;;AAED,IAAME,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AACtB,MAAMC,SAAS,GAAGL,eAAe,EAAjC;AAEA,SAAO;AAAEK,IAAAA,SAAS,EAATA;AAAF,GAAP;AACD,CAJD;;AAMA,eAAeF,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport dynamic from \"next/dynamic\";\r\nimport {\r\n  Map,\r\n  TileLayer,\r\n  Marker,\r\n  Popup,\r\n  MapControl,\r\n  withLeaflet\r\n} from \"react-leaflet\";\r\n\r\nconst mapStyle = {\r\n  margin: 20,\r\n  padding: 20,\r\n  border: \"1px solid #DDD\"\r\n};\r\n\r\nconst state = {\r\n  center: {\r\n    lat: 31.698956,\r\n    lng: 76.732407\r\n  },\r\n  marker: {\r\n    lat: 31.698956,\r\n    lng: 76.732407\r\n  },\r\n  zoom: 13,\r\n  draggable: true\r\n};\r\n\r\nfunction RenderCompleted() {\r\n  const [mounted, setMounted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setMounted(true);\r\n\r\n    return () => {\r\n      setMounted(false);\r\n    };\r\n  });\r\n\r\n  return mounted;\r\n}\r\n\r\nconst GibMap = props => {\r\n  const isMounted = RenderCompleted();\r\n\r\n  return { isMounted };\r\n};\r\n\r\nexport default GibMap;\r\n"]},"metadata":{},"sourceType":"module"}